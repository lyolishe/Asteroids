version: "3"
services:
  app:
    build:
      context: .
    depends_on:
      - postgres
      - mongo
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      NODE_ENV: development
      PORT: 9001
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTANIER}
    working_dir: ${APP_PATH_CONTANIER}
    ports:
      - "3000:3000"
    command: >
      bash -c "npm run api:dbsync
      && npm run start"
  app_api:
    build:
      context: .
    depends_on:
      - postgres
      - mongo
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      NODE_ENV: development
      PORT: 9001
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTANIER}
    working_dir: ${APP_PATH_CONTANIER}
    ports:
      - "9001:9001"
    command: npm run api
  postgres:
    image: postgres:12
    ports:
      - "5432:5432"
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  mongo:
    image: mongo
    ports:
    - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: mongod
volumes:
  db-data:
